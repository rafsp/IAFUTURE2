# ASP.NET Core (.NET Framework)
trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# Instalação do NuGet
- task: NuGetToolInstaller@1

# Restauração de pacotes
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# Build do projeto e criação do pacote de deploy
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)/WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Verificação para garantir que o arquivo foi criado
- script: |
    echo "Verificando se o arquivo foi gerado na pasta de artefatos:"
    dir "$(build.artifactStagingDirectory)"
  displayName: 'Verificar criação do WebApp.zip'

# Publicação do pacote como um artefato
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(build.artifactStagingDirectory)/WebApp.zip'
    artifactName: 'WebAppArtifact'
  displayName: 'Publicar WebApp.zip como artefato'

# Baixa o artefato publicado antes do deploy
- task: DownloadPipelineArtifact@2
  inputs:
    artifactName: 'WebAppArtifact'
    path: '$(System.DefaultWorkingDirectory)'
  displayName: 'Baixar o artefato WebAppArtifact'

# Verificação para confirmar o download do artefato
- script: |
    echo "Verificando se o arquivo WebApp.zip foi baixado:"
    dir "$(System.DefaultWorkingDirectory)\WebAppArtifact"
  displayName: 'Confirmar o download do WebApp.zip'

# Deploy para o Azure Web App
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Azure for Students (10b15b88-8a07-4ad9-bf08-e557ed8f5519)'
    appType: 'webApp'
    appName: 'globalsolution-fiap'
    package: '$(System.DefaultWorkingDirectory)/WebAppArtifact/WebApp.zip'
    deploymentMethod: 'auto'
  displayName: 'Deploy para Azure Web App'
